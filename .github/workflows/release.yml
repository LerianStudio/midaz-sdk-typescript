name: release

on:
  push:
    branches:
      - main
      - develop
      - feature/**
      - release/**
      - hotfix/**
      - feat/**
    paths-ignore:
      - '.gitignore'
      - '**/*.env'   # Ignores all .env files
      - '*.env'      # Ignores .env files in the root directory
      - '**/*.md'    # Ignores all .md files
      - '*.md'       # Ignores .md files in the root directory
      - '**/*.txt'   # Ignores all .env files
      - '*.txt'      # Ignores .env files in the root directory
    tags-ignore: ['**']

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: read
  security-events: write

jobs:
  tests:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  publish_release:
    name: üöÄ Publish Release
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private_key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          scope: '@lerianstudio'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build
      
       # Install semantic-release plugins
      - name: Install missing plugin @semantic-release/exec
        run: npm install --save-dev @semantic-release/exec

      - name: Run Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          ci: false
          semantic_version: 23.0.8
          extra_plugins: |
            conventional-changelog-conventionalcommits@v7.0.2
            @saithodev/semantic-release-backmerge
            @semantic-release/git
            @semantic-release/npm
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}

  generate-changelog:
    name: üìù Generate AI-powered Changelog
    runs-on: ubuntu-latest
    needs: publish_release
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

      - uses: LerianStudio/github-actions-gptchangelog@main
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LERIAN_CI_CD_USER_GPG_KEY: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
          LERIAN_CI_CD_USER_GPG_KEY_PASSWORD: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
          LERIAN_CI_CD_USER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          LERIAN_CI_CD_USER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}